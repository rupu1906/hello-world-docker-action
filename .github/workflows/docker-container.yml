name: Integration Tests

on:
  push:
    branches: 
      - main

  workflow_dispatch:


jobs:
  parallel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x

      - name: Create docker container
        run: docker compose -f "docker-compose.yml" up -d --build
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests
        run: python -m pytest tests --alluredir=allure-results
        continue-on-error: true

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          folder: allure-history


  # - name: Install Python dependencies
    #   run: pip install pytest-selenium
    # - name: üìÇ Step 3 - Create a temp artifact folder named `output`
    #   run: |
    #     mkdir output

    # - name: üìä Step 5 - Collect Allure files and generate allure-report folder
    #   run: |
    #       allure generate output/
    # - name: üéÅ Step 6 - Publishing Allure artifact to GitHub Actions
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: allure-report
    #     path: allure-report


    # - name: Run Tests
    #   run: pytest test.py --html=report.html
    
